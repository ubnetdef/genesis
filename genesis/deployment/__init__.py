import hashlib
import logging
import os
from abc import abstractmethod
from distutils.dir_util import copy_tree
from shutil import copyfile

class BaseDeployer(object):
	NAME = "Unconfigured"
	DESC = "Unconfigured"

	ATTR_MAP = {}

	LINUX_OS = ['pfsense', 'ubuntu', 'centos']
	WINDOWS_OS = ['windows']
	CAN_CUSTOMIZE_OS = ['ubuntu', 'centos', 'windows']

	CUSTOM_POST_PROVISION_HOSTS = ['pfsense']

	AUTOGENERATED_HEADER = [
		"#######################################",
		"# WARNING: THIS FILE IS AUTOGENERATED #",
		"# DO NOT EDIT MANUALLY                #",
		"#######################################",
		"",
	]

	def __init__(self, step, config, args, deploy):
		self.step = step
		self.config = config
		self.args = args
		self.deploy = deploy

		self.logger = logging.getLogger(__name__)

	@abstractmethod
	def generate(self, data):
		pass

	@abstractmethod
	def execute(self):
		pass

	def _id(self, name):
		return hashlib.md5(name.encode('utf-8')).hexdigest()

	def _copy(self, src, dst):
		self.logger.debug('Copying {} -> {}'.format(src, dst))

		if os.path.isdir(src):
			copy_tree(src, dst)
		else:
			copyfile(src, dst)
